# Generated by Django 4.2.21 on 2025-07-08 15:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artiste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('bio', models.TextField()),
                ('pays', models.CharField(max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('photo', models.URLField(blank=True)),
                ('site_web', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConseilCulturel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('type', models.CharField(choices=[('domicile', 'À domicile'), ('voyage', 'En voyage')], max_length=20)),
                ('pays', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Oeuvre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('type', models.CharField(choices=[('film', 'Film'), ('musique', 'Musique'), ('livre', 'Livre'), ('recette', 'Recette')], max_length=20)),
                ('description', models.TextField()),
                ('ambiance', models.CharField(blank=True, max_length=200)),
                ('contexte', models.CharField(blank=True, max_length=200)),
                ('pays', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('lien', models.URLField(blank=True)),
                ('image', models.URLField(blank=True)),
                ('artiste', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oeuvres', to='users.artiste')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('theme', models.CharField(choices=[('voyage', 'Voyage'), ('soirée', 'Soirée'), ('lecture', 'Lecture'), ('découverte', 'Découverte'), ('autre', 'Autre')], default='autre', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('pays', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('image', models.URLField(blank=True)),
                ('oeuvres', models.ManyToManyField(blank=True, related_name='playlists', to='users.oeuvre')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('lieu', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('pays', models.CharField(max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('site_web', models.URLField(blank=True)),
                ('image', models.URLField(blank=True)),
                ('artistes', models.ManyToManyField(blank=True, related_name='evenements', to='users.artiste')),
            ],
        ),
    ]
